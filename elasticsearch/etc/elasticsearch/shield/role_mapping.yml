# Role mapping configuration file which has elasticsearch roles as keys
# that map to one or more user or group distinguished names

#roleA:   this is an elasticsearch role
#  - groupA-DN  this is a group distinguished name
#  - groupB-DN
#  - user1-DN   this is the full user distinguished name

#power_user:
#  - "cn=admins,dc=example,dc=com"
#user:
#  - "cn=users,dc=example,dc=com"
#  - "cn=admins,dc=example,dc=com"
#  - "cn=John Doe,cn=other users,dc=example,dc=com"

# Give all the config_only nodes admin access
{% set client_nodes = salt['mine.get']('G@stack_id:' ~ grains.stack_id ~ ' and G@roles:elasticsearch.config_only', 'grains.items', 'compound').values() %}
{% set kibana_nodes = salt['mine.get']('G@stack_id:' ~ grains.stack_id ~ ' and G@roles:elasticsearch.kibana', 'grains.items', 'compound').values() %}
admin:
  {% for node in client_nodes -%}
  - "CN={{ node.fqdn }},OU=Elasticsearch,O=Elasticsearch,L=US,ST=US,C=US"
  {% endfor %}

kibana4_server:
  {% for node in kibana_nodes -%}
  - "CN={{ node.fqdn }},OU=Kibana,O=Elasticsearch,L=US,ST=US,C=US"
  {% endfor %}
